export const platformTypes = {
    null: 1,
    undefined: 2,
    primitiveString: 10,
    primitiveNumber: 11,
    primitiveBoolean: 12,
    primitiveBigInt: 13,
    primitiveSymbol: 14,

    function: 100,
    asyncFunction: 101,
    generatorFunction: 102,

    object: 1000,
    set: 1002,
    map: 1003,
    date: 1004,
    regExp: 1005,
    promise: 1006,
    weakMap: 1007,
    weakSet: 1008,
    dataView: 1010,
    readableStream: 1011,
    writableStream: 1012,
    byteLengthQueuingStrategy: 1013,
    countQueuingStrategy: 1014,
    transformStream: 1015,

    error: 1100,
    typeError: 1101,
    rangeError: 1102,
    syntaxError: 1103,
    uriError: 1104,
    referenceError: 1105,
    evalError: 1106,
    aggregateError: 1107,

    buffer: 1200,
    arrayBuffer: 1201,
    sharedArrayBuffer: 1202,

    string: 1300,
    number: 1301,
    boolean: 1302,
    bigInt: 1303,
    symbol: 1304,

    array: 2000,

    int8Array: 2001,
    uint8Array: 2002,
    uint8ClampedArray: 2003,
    int16Array: 2004,
    uint16Array: 2005,
    int32Array: 2006,
    uint32Array: 2007,
    float32Array: 2008,
    float64Array: 2009,
    bigInt64Array: 2010,
    bigUint64Array: 2011,
};
export const platformTypeGroups = {
    nullOrUndefined: [platformTypes.null, platformTypes.undefined],
    primitive: [
        platformTypes.primitiveNumber,
        platformTypes.primitiveBoolean,
        platformTypes.primitiveString,
        platformTypes.primitiveBigInt,
        platformTypes.primitiveSymbol,
    ],
    parentObject: [platformTypes.object],
    childObject: Object.values(platformTypes).filter(
        (v) =>
            ![
                platformTypes.null,
                platformTypes.undefined,
                platformTypes.object,
                platformTypes.primitiveNumber,
                platformTypes.primitiveBoolean,
                platformTypes.primitiveString,
                platformTypes.primitiveBigInt,
                platformTypes.primitiveSymbol,
            ].includes(v),
    ),
};
export const jsonTypes = {
    null: "null",
    undefined: "undefined",
    string: "string",
    object: "object",
    number: "number",
    boolean: "boolean",
    array: "array",
};
export const jsonTypeGroups = {
    primitive: [jsonTypes.string, jsonTypes.number, jsonTypes.boolean],
    reference: [jsonTypes.object, jsonTypes.array],
    exist: [jsonTypes.null, jsonTypes.string, jsonTypes.number, jsonTypes.boolean, jsonTypes.object, jsonTypes.array],
    effective: [jsonTypes.string, jsonTypes.number, jsonTypes.boolean, jsonTypes.object, jsonTypes.array],
    empty: [jsonTypes.null, jsonTypes.undefined],
    all: Object.values(jsonTypes),
};

export const typeofTypes = {
    null: "null",
    undefined: "undefined",
    string: "string",
    object: "object",
    number: "number",
    boolean: "boolean",
    array: "array",
    bigint: "bigint",
    symbol: "symbol",
    function: "function",
};
export const typeofTypeGroups = {
    primitive: [typeofTypes.string, typeofTypes.number, typeofTypes.boolean, typeofTypes.bigint, typeofTypes.symbol],
    reference: [typeofTypes.object, typeofTypes.array, typeofTypes.function],
    exist: [
        typeofTypes.null,
        typeofTypes.string,
        typeofTypes.number,
        typeofTypes.boolean,
        typeofTypes.bigint,
        typeofTypes.symbol,
        typeofTypes.object,
        typeofTypes.array,
        typeofTypes.function,
    ],
    effective: [
        typeofTypes.string,
        typeofTypes.number,
        typeofTypes.boolean,
        typeofTypes.bigint,
        typeofTypes.symbol,
        typeofTypes.object,
        typeofTypes.array,
        typeofTypes.function,
    ],
    empty: [typeofTypes.null, typeofTypes.undefined],
    all: Object.values(typeofTypes),
};
